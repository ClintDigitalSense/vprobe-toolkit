memmodel guest64;

/*
 * guestload --
 * guestloadstr --
 *   Wrappers around getguest* that return 0 for reads of the null page.
 */
uint64
guestload(uint64 *addr) {
   return addr < (1 << 12) ? 0 : *addr;
}

string
guestloadstr(char *addr) {
   return addr < (1 << 12) ? "<NULL>" : (string)addr;
}

/*
 * Initialize offsets.
 */
void
initOffsets() {
   if (pidOffset == 0 && nameOffset == 0) {
      pidOffset  = offatret(&sys_getpid);
      nameOffset = offatstrcpy(&get_task_comm, &strncpy);
   }
}

/*
 * curthrptr --
 *   Return pointer to kernel thread-private data for the current process
 *   on the current VCPU. This might be either GSBASE or KERNELGSBASE;
 *   testing the CPL isn't *quite* right, because there's a short window
 *   immediately after the hardware syscall where the right value is still
 *   in KERNELGSBASE.
 */
char *
curthrptr() {
   return GSBASE >= 0x100000000 ? GSBASE : KERNELGSBASE;
}

/*
 * curprocname --
 * curpid --
 *   Return the current name and pid of the current process.
 */
string curprocname() {
   initOffsets();
   return guestloadstr(guestload(curthrptr()) + nameOffset);
}

int
curpid() {
   initOffsets();
   return guestload(guestload(curthrptr()) + pidOffset);
}
