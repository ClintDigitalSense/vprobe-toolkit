/************************************************************
 * Copyright 2007-2010 VMware, Inc.  All rights reserved.
 * -- VMware Confidential
 ************************************************************/
/** 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 3. Neither the name of VMware, Inc. nor the names of its contributors may
 * be used to endorse or promote products derived from this software with
 * specific prior written permission.
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 */

/*
 * Pretty-printing aggregator for VT exits
 *
 * Warning: as a result of formatting aggregate keys in a nice,
 * human-readable format, this script incurs runtime overhead on HV
 * exits. See vt-exit-fast.emt for a faster version using on numeric
 * aggregate keys.
 */

string str;

HV_Exit {
   code = VMCS_EXIT_REASON;
   sprintf(str, "%3d ", code);
   # Exit code 0: software exception
   if (code == 0) {
      intrInfo = VMCS_EXIT_INTR_INFO;
      faultNum = intrInfo & 0xff;
      sprintf(str, "%s softint exc %d", str, faultNum);
      if (faultNum == 14) {
         sprintf(str, "%s #PF @%#llx", str, VMCS_EXIT_QUAL);
      }
   }
   if (code == 1) {
      intrInfo = VMCS_EXIT_INTR_INFO;
      sprintf(str, "%s hwIRQ %03d", str, intrInfo & 0xff);
   }
   if (code == 12) {
      sprintf(str, "%s HLT", str);
   }
   if (code == 14) {
      sprintf(str, "%s INVLPG @%#llx", str, VMCS_EXIT_QUAL);
   }
   # Exit code 28: CR
   if (code == 28) {
      qual = VMCS_EXIT_QUAL;
      sprintf(str, "%s CR%1d", str, qual & 0xf);
      if (qual & (1 << 4)) {
         sprintf(str, "%s WRITE ", str);
      } else {
         sprintf(str, "%s READ  ", str);
      }
   }
   
   # Exit code 30: PIO instruction
   if (code == 30) {
      qual = VMCS_EXIT_QUAL;
      wasIn = qual & (1 << 3);
      port  = (qual >> 16) & 0xfff;
      if (wasIn) {
         sprintf(str, "%s %s", str, "IN  ");
      } else {
         sprintf(str, "%s %s", str, "OUT ");
      }
      sprintf(str, "%s port %04x", str, port);
   }
   if (code == 43) {
      sprintf(str, "%s TPR", str);
   }
   exits[str]++;
}
