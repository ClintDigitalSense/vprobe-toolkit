typedef struct {
   uint8  byte;
   uint16 word;
   uint32 dword;
   uint64 qword;
} testa;

typedef struct {
   testa *aptr1;
   testa *aptr2;
} testb;

typedef struct {
   testa aNest;
   testb bNest;
} testc;

testa *ptr;
testb *ptr2;
testc *ptr3;

VMM1Hz {
   ptr = GSBASE;
   ptr3 = KERNELGSBASE;
   ptr2 = ptr3->bNest.aptr2 & 0xfff;
   printf("%d\n", (ptr->byte + ptr->word + ptr->dword - ptr->qword) / 
          ptr2->aptr2->dword);
   printf("%d\n", ptr3->aNest.qword * ptr3->bNest.aptr2->byte);
   printf("%d\n", (&(ptr3->aNest))->qword == ptr3->aNest.qword);
}
